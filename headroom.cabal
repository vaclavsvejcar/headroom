cabal-version: 1.12

-- This file has been generated from package.yaml by hpack version 0.31.2.
--
-- see: https://github.com/sol/hpack
--
-- hash: 8c90de34135f9a78378afe3717caf0decada8b434b1533476af85ee6274e4dd2

name:           headroom
version:        0.2.0.0
synopsis:       License Header Manager
description:    So you are tired of managing license headers in your codebase by hand? Then Headroom is the right tool for you! Now you can define your license header as Mustache template, put all the variables (such as author's name, year, etc.) into the YAML config file and Headroom will take care to add such license headers to all your source code files.
category:       Utils
homepage:       https://github.com/vaclavsvejcar/headroom
bug-reports:    https://github.com/vaclavsvejcar/headroom/issues
author:         Vaclav Svejcar
maintainer:     vaclav.svejcar@gmail.com
copyright:      Copyright (c) 2019-2020 Vaclav Svejcar
license:        BSD3
license-file:   LICENSE
build-type:     Simple
extra-source-files:
    CHANGELOG.md
    LICENSE
    README.md
    embedded/config-file.yaml
    embedded/default-config.yaml
    embedded/license/apache2/css.mustache
    embedded/license/apache2/haskell.mustache
    embedded/license/apache2/html.mustache
    embedded/license/apache2/java.mustache
    embedded/license/apache2/js.mustache
    embedded/license/apache2/scala.mustache
    embedded/license/bsd3/css.mustache
    embedded/license/bsd3/haskell.mustache
    embedded/license/bsd3/html.mustache
    embedded/license/bsd3/java.mustache
    embedded/license/bsd3/js.mustache
    embedded/license/bsd3/scala.mustache
    embedded/license/gpl2/css.mustache
    embedded/license/gpl2/haskell.mustache
    embedded/license/gpl2/html.mustache
    embedded/license/gpl2/java.mustache
    embedded/license/gpl2/js.mustache
    embedded/license/gpl2/scala.mustache
    embedded/license/gpl3/css.mustache
    embedded/license/gpl3/haskell.mustache
    embedded/license/gpl3/html.mustache
    embedded/license/gpl3/java.mustache
    embedded/license/gpl3/js.mustache
    embedded/license/gpl3/scala.mustache
    embedded/license/mit/css.mustache
    embedded/license/mit/haskell.mustache
    embedded/license/mit/html.mustache
    embedded/license/mit/java.mustache
    embedded/license/mit/js.mustache
    embedded/license/mit/scala.mustache
    embedded/license/mpl2/css.mustache
    embedded/license/mpl2/haskell.mustache
    embedded/license/mpl2/html.mustache
    embedded/license/mpl2/java.mustache
    embedded/license/mpl2/js.mustache
    embedded/license/mpl2/scala.mustache
    test-data/test-template.mustache
    test-data/code-samples/css/sample1.css
    test-data/code-samples/css/sample2.css
    test-data/code-samples/css/sample3.css
    test-data/code-samples/haskell/full.hs
    test-data/code-samples/haskell/replaced-simple.hs
    test-data/code-samples/haskell/stripped.hs
    test-data/code-samples/html/with-doctype.html
    test-data/code-samples/html/without-doctype.html
    test-data/code-samples/java/full.java
    test-data/code-samples/js/sample1.js
    test-data/code-samples/js/sample2.js
    test-data/code-samples/js/sample3.js
    test-data/code-samples/scala/full.scala
    test-data/configs/full.yaml
    test-data/test-traverse/a.html
    test-data/test-traverse/foo/b.html
    test-data/test-traverse/foo/test.xml
    test-data/test-traverse/foo/bar/c.html

source-repository head
  type: git
  location: https://github.com/vaclavsvejcar/headroom

library
  exposed-modules:
      Headroom.Command
      Headroom.Command.Gen
      Headroom.Command.Init
      Headroom.Command.Readers
      Headroom.Command.Run
      Headroom.Command.Utils
      Headroom.Configuration
      Headroom.Embedded
      Headroom.FileSystem
      Headroom.FileType
      Headroom.Header
      Headroom.Meta
      Headroom.Serialization
      Headroom.Template
      Headroom.Template.Mustache
      Headroom.Types
      Headroom.Types.EnumExtra
      Headroom.UI
      Headroom.UI.Progress
  other-modules:
      Paths_headroom
  hs-source-dirs:
      src
  ghc-options: -optP-Wno-nonportable-include-path -Wall -Wcompat -Widentities -Wincomplete-record-updates -Wincomplete-uni-patterns -Wpartial-fields -Wredundant-constraints -Werror=incomplete-patterns
  build-depends:
      aeson
    , base >=4.7 && <5
    , either
    , file-embed
    , lens
    , mustache
    , optparse-applicative
    , pcre-heavy
    , pcre-light
    , rio
    , template-haskell
    , text
    , time
    , validation
    , yaml
  default-language: Haskell2010

executable headroom
  main-is: Main.hs
  other-modules:
      Paths_headroom
  hs-source-dirs:
      app
  ghc-options: -optP-Wno-nonportable-include-path -Wall -Wcompat -Widentities -Wincomplete-record-updates -Wincomplete-uni-patterns -Wpartial-fields -Wredundant-constraints -Werror=incomplete-patterns -threaded -rtsopts -with-rtsopts=-N
  build-depends:
      base >=4.7 && <5
    , headroom
    , optparse-applicative
    , rio
  default-language: Haskell2010

test-suite doctest
  type: exitcode-stdio-1.0
  main-is: Main.hs
  other-modules:
      Paths_headroom
  hs-source-dirs:
      doctest
  ghc-options: -optP-Wno-nonportable-include-path -Wall -Wcompat -Widentities -Wincomplete-record-updates -Wincomplete-uni-patterns -Wpartial-fields -Wredundant-constraints -Werror=incomplete-patterns
  build-depends:
      base >=4.7 && <5
    , doctest
    , optparse-applicative
    , rio
  default-language: Haskell2010

test-suite spec
  type: exitcode-stdio-1.0
  main-is: Spec.hs
  other-modules:
      Headroom.Command.InitSpec
      Headroom.Command.ReadersSpec
      Headroom.ConfigurationSpec
      Headroom.FileSystemSpec
      Headroom.FileTypeSpec
      Headroom.SerializationSpec
      Headroom.Template.MustacheSpec
      Headroom.Types.EnumExtraSpec
      Headroom.UI.ProgressSpec
      Test.Utils
      Paths_headroom
  hs-source-dirs:
      test
  ghc-options: -optP-Wno-nonportable-include-path -Wall -Wcompat -Widentities -Wincomplete-record-updates -Wincomplete-uni-patterns -Wpartial-fields -Wredundant-constraints -Werror=incomplete-patterns
  build-depends:
      QuickCheck
    , aeson
    , base >=4.7 && <5
    , headroom
    , hspec
    , optparse-applicative
    , rio
  default-language: Haskell2010
