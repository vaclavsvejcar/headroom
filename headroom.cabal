cabal-version: 2.2

-- This file has been generated from package.yaml by hpack version 0.33.0.
--
-- see: https://github.com/sol/hpack
--
-- hash: 65abf7f836c076afc90aa5cf7190e8d0cabee4309c39c66ebd00b9da3a773b92

name:           headroom
version:        0.4.2.0
synopsis:       License Header Manager
description:    Would you like to have nice, up-to-date license/copyright headers in your source code files but hate to manage them by hand? Then Headroom is the right tool for you! Now you can define your license header as Mustache template, put all the variables (such as author's name, year, etc.) into the YAML config file and Headroom will take care to add such license headers to all your source code files.
category:       Utils
homepage:       https://github.com/vaclavsvejcar/headroom
bug-reports:    https://github.com/vaclavsvejcar/headroom/issues
author:         Vaclav Svejcar
maintainer:     vaclav.svejcar@gmail.com
copyright:      Copyright (c) 2019-2021 Vaclav Svejcar
license:        BSD-3-Clause
license-file:   LICENSE
build-type:     Simple
extra-source-files:
    CHANGELOG.md
    LICENSE
    README.md
    embedded/config-file.yaml
    embedded/default-config.yaml
    embedded/license/apache2/c.mustache
    embedded/license/apache2/cpp.mustache
    embedded/license/apache2/css.mustache
    embedded/license/apache2/go.mustache
    embedded/license/apache2/haskell.mustache
    embedded/license/apache2/html.mustache
    embedded/license/apache2/java.mustache
    embedded/license/apache2/js.mustache
    embedded/license/apache2/purescript.mustache
    embedded/license/apache2/rust.mustache
    embedded/license/apache2/scala.mustache
    embedded/license/apache2/shell.mustache
    embedded/license/bsd3/c.mustache
    embedded/license/bsd3/cpp.mustache
    embedded/license/bsd3/css.mustache
    embedded/license/bsd3/go.mustache
    embedded/license/bsd3/haskell.mustache
    embedded/license/bsd3/html.mustache
    embedded/license/bsd3/java.mustache
    embedded/license/bsd3/js.mustache
    embedded/license/bsd3/purescript.mustache
    embedded/license/bsd3/rust.mustache
    embedded/license/bsd3/scala.mustache
    embedded/license/bsd3/shell.mustache
    embedded/license/gpl2/c.mustache
    embedded/license/gpl2/cpp.mustache
    embedded/license/gpl2/css.mustache
    embedded/license/gpl2/go.mustache
    embedded/license/gpl2/haskell.mustache
    embedded/license/gpl2/html.mustache
    embedded/license/gpl2/java.mustache
    embedded/license/gpl2/js.mustache
    embedded/license/gpl2/purescript.mustache
    embedded/license/gpl2/rust.mustache
    embedded/license/gpl2/scala.mustache
    embedded/license/gpl2/shell.mustache
    embedded/license/gpl3/c.mustache
    embedded/license/gpl3/cpp.mustache
    embedded/license/gpl3/css.mustache
    embedded/license/gpl3/go.mustache
    embedded/license/gpl3/haskell.mustache
    embedded/license/gpl3/html.mustache
    embedded/license/gpl3/java.mustache
    embedded/license/gpl3/js.mustache
    embedded/license/gpl3/purescript.mustache
    embedded/license/gpl3/rust.mustache
    embedded/license/gpl3/scala.mustache
    embedded/license/gpl3/shell.mustache
    embedded/license/mit/c.mustache
    embedded/license/mit/cpp.mustache
    embedded/license/mit/css.mustache
    embedded/license/mit/go.mustache
    embedded/license/mit/haskell.mustache
    embedded/license/mit/html.mustache
    embedded/license/mit/java.mustache
    embedded/license/mit/js.mustache
    embedded/license/mit/purescript.mustache
    embedded/license/mit/rust.mustache
    embedded/license/mit/scala.mustache
    embedded/license/mit/shell.mustache
    embedded/license/mpl2/c.mustache
    embedded/license/mpl2/cpp.mustache
    embedded/license/mpl2/css.mustache
    embedded/license/mpl2/go.mustache
    embedded/license/mpl2/haskell.mustache
    embedded/license/mpl2/html.mustache
    embedded/license/mpl2/java.mustache
    embedded/license/mpl2/js.mustache
    embedded/license/mpl2/purescript.mustache
    embedded/license/mpl2/rust.mustache
    embedded/license/mpl2/scala.mustache
    embedded/license/mpl2/shell.mustache
    test-data/test-template.mustache
    test-data/code-samples/c/sample1.c
    test-data/code-samples/c/sample2.c
    test-data/code-samples/cpp/sample1.cpp
    test-data/code-samples/cpp/sample2.cpp
    test-data/code-samples/css/sample1.css
    test-data/code-samples/css/sample2.css
    test-data/code-samples/go/sample1.go
    test-data/code-samples/haskell/full.hs
    test-data/code-samples/haskell/header.hs
    test-data/code-samples/haskell/sample1.hs
    test-data/code-samples/haskell/sample2.hs
    test-data/code-samples/haskell/sample3.hs
    test-data/code-samples/html/sample1.html
    test-data/code-samples/html/sample2.html
    test-data/code-samples/java/sample1.java
    test-data/code-samples/java/sample2.java
    test-data/code-samples/js/sample1.js
    test-data/code-samples/js/sample2.js
    test-data/code-samples/purescript/full.purs
    test-data/code-samples/rust/sample1.rs
    test-data/code-samples/scala/sample1.scala
    test-data/code-samples/scala/sample2.scala
    test-data/code-samples/shell/sample1.sh
    test-data/configs/full.yaml
    test-data/templates/haskell.mustache
    test-data/test-traverse/a.html
    test-data/test-traverse/foo/b.html
    test-data/test-traverse/foo/test.xml
    test-data/test-traverse/foo/bar/c.html

source-repository head
  type: git
  location: https://github.com/vaclavsvejcar/headroom

library
  exposed-modules:
      Headroom.Command
      Headroom.Command.Gen
      Headroom.Command.Init
      Headroom.Command.Readers
      Headroom.Command.Run
      Headroom.Command.Types
      Headroom.Command.Utils
      Headroom.Configuration
      Headroom.Configuration.Compat
      Headroom.Configuration.Enrich
      Headroom.Configuration.Types
      Headroom.Data.Coerce
      Headroom.Data.EnumExtra
      Headroom.Data.Has
      Headroom.Data.Lens
      Headroom.Data.Regex
      Headroom.Data.Serialization
      Headroom.Data.Text
      Headroom.Embedded
      Headroom.Embedded.TH
      Headroom.FileSupport
      Headroom.FileSupport.C
      Headroom.FileSupport.CPP
      Headroom.FileSupport.CSS
      Headroom.FileSupport.Go
      Headroom.FileSupport.Haskell
      Headroom.FileSupport.Haskell.Haddock
      Headroom.FileSupport.HTML
      Headroom.FileSupport.Java
      Headroom.FileSupport.JS
      Headroom.FileSupport.PureScript
      Headroom.FileSupport.Rust
      Headroom.FileSupport.Scala
      Headroom.FileSupport.Shell
      Headroom.FileSupport.TemplateData
      Headroom.FileSupport.Types
      Headroom.FileType
      Headroom.FileType.Types
      Headroom.Header
      Headroom.Header.Sanitize
      Headroom.Header.Types
      Headroom.IO.FileSystem
      Headroom.IO.Network
      Headroom.Meta
      Headroom.Meta.Version
      Headroom.PostProcess
      Headroom.PostProcess.Types
      Headroom.PostProcess.UpdateCopyright
      Headroom.SourceCode
      Headroom.Template
      Headroom.Template.Mustache
      Headroom.Template.TemplateRef
      Headroom.Types
      Headroom.UI
      Headroom.UI.Progress
      Headroom.UI.Table
      Headroom.Variables
      Headroom.Variables.Types
  other-modules:
      Paths_headroom
  autogen-modules:
      Paths_headroom
  hs-source-dirs:
      src
  ghc-options: -optP-Wno-nonportable-include-path -Wall -Wcompat -Widentities -Wincomplete-record-updates -Wincomplete-uni-patterns -Wpartial-fields -Wredundant-constraints -Werror=incomplete-patterns
  build-depends:
      aeson
    , base >=4.7 && <5
    , either
    , extra
    , file-embed
    , generic-data
    , http-client
    , http-types
    , microlens
    , microlens-th
    , modern-uri
    , mtl
    , mustache
    , optparse-applicative
    , pcre-heavy
    , pcre-light
    , req
    , rio
    , string-interpolate
    , template-haskell
    , time
    , vcs-ignore
    , yaml
  default-language: Haskell2010

executable headroom
  main-is: Main.hs
  other-modules:
      Paths_headroom
  hs-source-dirs:
      app
  ghc-options: -optP-Wno-nonportable-include-path -Wall -Wcompat -Widentities -Wincomplete-record-updates -Wincomplete-uni-patterns -Wpartial-fields -Wredundant-constraints -Werror=incomplete-patterns -threaded -rtsopts -with-rtsopts=-N
  build-depends:
      base >=4.7 && <5
    , headroom
    , optparse-applicative
    , rio
  default-language: Haskell2010

test-suite doctest
  type: exitcode-stdio-1.0
  main-is: Main.hs
  other-modules:
      Paths_headroom
  hs-source-dirs:
      doctest
  ghc-options: -optP-Wno-nonportable-include-path -Wall -Wcompat -Widentities -Wincomplete-record-updates -Wincomplete-uni-patterns -Wpartial-fields -Wredundant-constraints -Werror=incomplete-patterns
  build-depends:
      base >=4.7 && <5
    , doctest
    , optparse-applicative
    , rio
  default-language: Haskell2010

test-suite spec
  type: exitcode-stdio-1.0
  main-is: Spec.hs
  other-modules:
      Headroom.Command.InitSpec
      Headroom.Command.ReadersSpec
      Headroom.Command.RunSpec
      Headroom.Configuration.CompatSpec
      Headroom.Configuration.EnrichSpec
      Headroom.ConfigurationSpec
      Headroom.Data.CoerceSpec
      Headroom.Data.EnumExtraSpec
      Headroom.Data.RegexSpec
      Headroom.Data.SerializationSpec
      Headroom.Data.TextSpec
      Headroom.FileSupport.CPPSpec
      Headroom.FileSupport.CSpec
      Headroom.FileSupport.CSSSpec
      Headroom.FileSupport.GoSpec
      Headroom.FileSupport.Haskell.HaddockSpec
      Headroom.FileSupport.HaskellSpec
      Headroom.FileSupport.HTMLSpec
      Headroom.FileSupport.JavaSpec
      Headroom.FileSupport.JSSpec
      Headroom.FileSupport.PureScriptSpec
      Headroom.FileSupport.RustSpec
      Headroom.FileSupport.ScalaSpec
      Headroom.FileSupport.ShellSpec
      Headroom.FileSupportSpec
      Headroom.FileTypeSpec
      Headroom.Header.SanitizeSpec
      Headroom.HeaderSpec
      Headroom.IO.FileSystemSpec
      Headroom.Meta.VersionSpec
      Headroom.PostProcess.TypesSpec
      Headroom.PostProcess.UpdateCopyrightSpec
      Headroom.PostProcessSpec
      Headroom.SourceCodeSpec
      Headroom.Template.MustacheSpec
      Headroom.Template.TemplateRefSpec
      Headroom.TypesSpec
      Headroom.UI.ProgressSpec
      Headroom.UI.TableSpec
      Headroom.VariablesSpec
      Paths_headroom
  hs-source-dirs:
      test
  ghc-options: -optP-Wno-nonportable-include-path -Wall -Wcompat -Widentities -Wincomplete-record-updates -Wincomplete-uni-patterns -Wpartial-fields -Wredundant-constraints -Werror=incomplete-patterns
  build-tool-depends:
      hspec-discover:hspec-discover
  build-depends:
      QuickCheck
    , aeson
    , base >=4.7 && <5
    , headroom
    , hspec
    , modern-uri
    , mtl
    , optparse-applicative
    , pcre-light
    , rio
    , string-interpolate
    , time
  default-language: Haskell2010
